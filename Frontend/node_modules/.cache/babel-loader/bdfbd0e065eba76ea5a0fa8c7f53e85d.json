{"ast":null,"code":"var _jsxFileName = \"/Users/sushantkadam/Desktop/JS_Projects/Hotel/Trip-Hotel-Search-1/Frontend/src/pages/list/List.jsx\";\nimport \"./list.css\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport Header from \"../../components/header/Header\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { format } from \"date-fns\";\nimport { DateRange } from \"react-date-range\";\nimport SearchItem from \"../../components/searchItem/SearchItem\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = () => {\n  // const location = useLocation();\n  // const [destination, setDestination] = useState(location.state.destination);\n  // const [dates, setDates] = useState(location.state.dates);\n  // const [openDate, setOpenDate] = useState(false);\n  // const [options, setOptions] = useState(location.state.options);\n  // const [min, setMin] = useState(undefined);\n  // const [max, setMax] = useState(undefined);\n  // const { data, loading, error, reFetch } = useFetch(\n  //   `http://localhost:8080/hotels?city=${destination}&min=${min || 0}&max=${\n  //     max || 999\n  //   }`\n  // );\n  // const handleClick = () => {\n  //   reFetch();\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      type: \"list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/sushantkadam/Desktop/JS_Projects/Hotel/Trip-Hotel-Search-1/Frontend/src/pages/list/List.jsx"],"names":["Navbar","Header","useLocation","useState","format","DateRange","SearchItem","useFetch","List"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+FD,CAlHD;;KAAMA,I;AAoHN,eAAeA,IAAf","sourcesContent":["import \"./list.css\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport Header from \"../../components/header/Header\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport SearchItem from \"../../components/searchItem/SearchItem\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\n\r\nconst List = () => {\r\n  // const location = useLocation();\r\n  // const [destination, setDestination] = useState(location.state.destination);\r\n  // const [dates, setDates] = useState(location.state.dates);\r\n  // const [openDate, setOpenDate] = useState(false);\r\n  // const [options, setOptions] = useState(location.state.options);\r\n  // const [min, setMin] = useState(undefined);\r\n  // const [max, setMax] = useState(undefined);\r\n\r\n  // const { data, loading, error, reFetch } = useFetch(\r\n  //   `http://localhost:8080/hotels?city=${destination}&min=${min || 0}&max=${\r\n  //     max || 999\r\n  //   }`\r\n  // );\r\n\r\n  // const handleClick = () => {\r\n  //   reFetch();\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Header type=\"list\" />\r\n      {/* <div className=\"listContainer\">\r\n        <div className=\"listWrapper\">\r\n          <div className=\"listSearch\">\r\n            <h1 className=\"lsTitle\">Search</h1>\r\n            <div className=\"lsItem\">\r\n              <label>Destination</label>\r\n              <input placeholder={destination} type=\"text\" />\r\n            </div>\r\n            <div className=\"lsItem\">\r\n              <label>Check-in Date</label>\r\n              <span onClick={() => setOpenDate(!openDate)}>{`${format(\r\n                dates[0].startDate,\r\n                \"MM/dd/yyyy\"\r\n              )} to ${format(dates[0].endDate, \"MM/dd/yyyy\")}`}</span>\r\n              {openDate && (\r\n                <DateRange\r\n                  onChange={(item) => setDates([item.selection])}\r\n                  minDate={new Date()}\r\n                  ranges={dates}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"lsItem\">\r\n              <label>Options</label>\r\n              <div className=\"lsOptions\">\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">\r\n                    Min price <small>per night</small>\r\n                  </span>\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={(e) => setMin(e.target.value)}\r\n                    className=\"lsOptionInput\"\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">\r\n                    Max price <small>per night</small>\r\n                  </span>\r\n                  <input\r\n                    type=\"number\"\r\n                    onChange={(e) => setMax(e.target.value)}\r\n                    className=\"lsOptionInput\"\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">Adult</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={1}\r\n                    className=\"lsOptionInput\"\r\n                    placeholder={options.adult}\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">Children</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    className=\"lsOptionInput\"\r\n                    placeholder={options.children}\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">Room</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={1}\r\n                    className=\"lsOptionInput\"\r\n                    placeholder={options.room}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button onClick={handleClick}>Search</button>\r\n          </div>\r\n          <div className=\"listResult\">\r\n            {loading ? (\r\n              \"loading\"\r\n            ) : (\r\n              <>\r\n                {data.map((item) => (\r\n                  <SearchItem item={item} key={item._id} />\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div> */}\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}