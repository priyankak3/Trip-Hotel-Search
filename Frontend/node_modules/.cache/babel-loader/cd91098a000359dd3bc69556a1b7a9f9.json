{"ast":null,"code":"// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\n// import \"./reserve.css\";\n// import useFetch from \"../../hooks/useFetch\";\n// import { useContext, useState } from \"react\";\n// import { SearchContext } from \"../../context/SearchContext\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// const Reserve = ({ setOpen, hotelId }) => {\n//   const [selectedRooms, setSelectedRooms] = useState([]);\n//   const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\n//   const { dates } = useContext(SearchContext);\n//   const getDatesInRange = (startDate, endDate) => {\n//     const start = new Date(startDate);\n//     const end = new Date(endDate);\n//     const date = new Date(start.getTime());\n//     const dates = [];\n//     while (date <= end) {\n//       dates.push(new Date(date).getTime());\n//       date.setDate(date.getDate() + 1);\n//     }\n//     return dates;\n//   };\n//   const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n//   const isAvailable = (roomNumber) => {\n//     const isFound = roomNumber.unavailableDates.some((date) =>\n//       alldates.includes(new Date(date).getTime())\n//     );\n//     return !isFound;\n//   };\n//   const handleSelect = (e) => {\n//     const checked = e.target.checked;\n//     const value = e.target.value;\n//     setSelectedRooms(\n//       checked\n//         ? [...selectedRooms, value]\n//         : selectedRooms.filter((item) => item !== value)\n//     );\n//   };\n//   const navigate = useNavigate();\n//   const handleClick = async () => {\n//     try {\n//       await Promise.all(\n//         selectedRooms.map((roomId) => {\n//           const res = axios.put(`/rooms/availability/${roomId}`, {\n//             dates: alldates,\n//           });\n//           return res.data;\n//         })\n//       );\n//       setOpen(false);\n//       navigate(\"/\");\n//     } catch (err) {}\n//   };\n//   return (\n//     <div className=\"reserve\">\n//       <div className=\"rContainer\">\n//         <FontAwesomeIcon\n//           icon={faCircleXmark}\n//           className=\"rClose\"\n//           onClick={() => setOpen(false)}\n//         />\n//         <span>Select your rooms:</span>\n//         {data.map((item) => (\n//           <div className=\"rItem\" key={item._id}>\n//             <div className=\"rItemInfo\">\n//               <div className=\"rTitle\">{item.title}</div>\n//               <div className=\"rDesc\">{item.desc}</div>\n//               <div className=\"rMax\">\n//                 Max people: <b>{item.maxPeople}</b>\n//               </div>\n//               <div className=\"rPrice\">{item.price}</div>\n//             </div>\n//             <div className=\"rSelectRooms\">\n//               {item.roomNumbers.map((roomNumber) => (\n//                 <div className=\"room\">\n//                   <label>{roomNumber.number}</label>\n//                   <input\n//                     type=\"checkbox\"\n//                     value={roomNumber._id}\n//                     onChange={handleSelect}\n//                     disabled={!isAvailable(roomNumber)}\n//                   />\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         ))}\n//         <button onClick={handleClick} className=\"rButton\">\n//           Reserve Now!\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Reserve;","map":{"version":3,"sources":["/Users/sushantkadam/Desktop/JS_Projects/Hotel/Trip-Hotel-Search-1/Frontend/src/components/reserve/Reserve.jsx"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\n\n// import \"./reserve.css\";\n// import useFetch from \"../../hooks/useFetch\";\n// import { useContext, useState } from \"react\";\n// import { SearchContext } from \"../../context/SearchContext\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const Reserve = ({ setOpen, hotelId }) => {\n//   const [selectedRooms, setSelectedRooms] = useState([]);\n//   const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\n//   const { dates } = useContext(SearchContext);\n\n//   const getDatesInRange = (startDate, endDate) => {\n//     const start = new Date(startDate);\n//     const end = new Date(endDate);\n\n//     const date = new Date(start.getTime());\n\n//     const dates = [];\n\n//     while (date <= end) {\n//       dates.push(new Date(date).getTime());\n//       date.setDate(date.getDate() + 1);\n//     }\n\n//     return dates;\n//   };\n\n//   const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n//   const isAvailable = (roomNumber) => {\n//     const isFound = roomNumber.unavailableDates.some((date) =>\n//       alldates.includes(new Date(date).getTime())\n//     );\n\n//     return !isFound;\n//   };\n\n//   const handleSelect = (e) => {\n//     const checked = e.target.checked;\n//     const value = e.target.value;\n//     setSelectedRooms(\n//       checked\n//         ? [...selectedRooms, value]\n//         : selectedRooms.filter((item) => item !== value)\n//     );\n//   };\n\n//   const navigate = useNavigate();\n\n//   const handleClick = async () => {\n//     try {\n//       await Promise.all(\n//         selectedRooms.map((roomId) => {\n//           const res = axios.put(`/rooms/availability/${roomId}`, {\n//             dates: alldates,\n//           });\n//           return res.data;\n//         })\n//       );\n//       setOpen(false);\n//       navigate(\"/\");\n//     } catch (err) {}\n//   };\n//   return (\n//     <div className=\"reserve\">\n//       <div className=\"rContainer\">\n//         <FontAwesomeIcon\n//           icon={faCircleXmark}\n//           className=\"rClose\"\n//           onClick={() => setOpen(false)}\n//         />\n//         <span>Select your rooms:</span>\n//         {data.map((item) => (\n//           <div className=\"rItem\" key={item._id}>\n//             <div className=\"rItemInfo\">\n//               <div className=\"rTitle\">{item.title}</div>\n//               <div className=\"rDesc\">{item.desc}</div>\n//               <div className=\"rMax\">\n//                 Max people: <b>{item.maxPeople}</b>\n//               </div>\n//               <div className=\"rPrice\">{item.price}</div>\n//             </div>\n//             <div className=\"rSelectRooms\">\n//               {item.roomNumbers.map((roomNumber) => (\n//                 <div className=\"room\">\n//                   <label>{roomNumber.number}</label>\n//                   <input\n//                     type=\"checkbox\"\n//                     value={roomNumber._id}\n//                     onChange={handleSelect}\n//                     disabled={!isAvailable(roomNumber)}\n//                   />\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         ))}\n//         <button onClick={handleClick} className=\"rButton\">\n//           Reserve Now!\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Reserve;\n"]},"metadata":{},"sourceType":"module"}